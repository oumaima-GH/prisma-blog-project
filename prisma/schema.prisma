// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

//User

model User {
  id         Int       @id @default(autoincrement())
  name       String
  email      String    @unique
  password   String
  role       Role      @default(guest)
  created_at DateTime  @default(now())
  updated_at DateTime  @default(now())
  articles   Article[]
  comments   Comment[]
}

//Atricle

model Article {
  id         Int       @id @default(autoincrement())
  title      String
  content    String
  image      String
  role       Role      @default(author)
  created_at DateTime  @default(now())
  updated_at DateTime  @default(now())
  comments   Comment[]
  users      User      @relation(fields: [authorId], references: [id])
  authorId   Int

  CategoriesOnArticles CategoriesOnArticles[]
}

//Category 

model Category {
  id                   Int                    @id @default(autoincrement())
  name                 String
  created_at           DateTime               @default(now())
  updated_at           DateTime               @default(now())
  CategoriesOnArticles CategoriesOnArticles[]
}

model CategoriesOnArticles {
  articles   Article  @relation(fields: [articleId], references: [id])
  articleId  Int
  category   Category @relation(fields: [categoryId], references: [id])
  categoryId Int

  assignedAt DateTime @default(now())
  assignedBy String

  @@id([articleId, categoryId])
}

//Comments

model Comment {
  id         Int      @id @default(autoincrement())
  content    String
  created_at DateTime @default(now())
  updated_at DateTime @default(now())
  users      User     @relation(fields: [userId], references: [id])
  userId     Int      @unique
  articles   Article  @relation(fields: [articleId], references: [id])
  articleId  Int      @unique
}

enum Role {
  guest
  author
  admin
}
